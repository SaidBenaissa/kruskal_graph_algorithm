name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
      - name: Build and push Docker images
  # You may pin to the exact commit or the version.
  # uses: docker/build-push-action@0db984c1826869dcd0740ff26ff75ff543238fd9
  uses: docker/build-push-action@v2.2.1
  with:
    # Builder instance
    builder: # optional
    # Build's context is the set of files located in the specified PATH or URL
    context: # optional
    # Path to the Dockerfile
    file: # optional, default is ./Dockerfile
    # List of build-time variables
    build-args: # optional
    # List of metadata for an image
    labels: # optional
    # List of tags
    tags: # optional
    # Always attempt to pull a newer version of the image
    pull: # optional, default is false
    # Sets the target stage to build
    target: # optional
    # List of extra privileged entitlement (eg. network.host,security.insecure)
    allow: # optional
    # Do not use cache when building the image
    no-cache: # optional, default is false
    # List of target platforms for build
    platforms: # optional
    # Load is a shorthand for --output=type=docker
    load: # optional, default is false
    # Push is a shorthand for --output=type=registry
    push: # optional, default is false
    # List of output destinations (format: type=local,dest=path)
    outputs: # optional
    # List of external cache sources for buildx (eg. user/app:cache, type=local,src=path/to/dir)
    cache-from: # optional
    # List of cache export destinations for buildx (eg. user/app:cache, type=local,dest=path/to/dir)
    cache-to: # optional
    # List of secrets to expose to the build (eg. key=value, GIT_AUTH_TOKEN=mytoken)
    secrets: # optional
    # GitHub Token used to authenticate against a repository for Git context
    github-token: # optional, default is ${{ github.token }}
    # List of SSH agent socket or keys to expose to the build
    ssh: # optional
